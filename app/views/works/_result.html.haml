.row
  .col-xs-12.col-sm-12.col-md-10.col-lg-10.col-md-offset-1.col-lg-offset-1
    %h4
      .pull-right
        %h5
          Period:
          %small.text-primary
            = "#{@from_date} - #{@to_date}"
      Found
      %span.badge #{@data.total_count}

.row
  .col-xs-12.col-sm-12.col-md-10.col-lg-10.col-md-offset-1.col-lg-offset-1
    %table.table.table-striped.table-bordered
      %thead
        %tr
          %th.col-xs-6
            Work done
            %small.pull-right
              = link_to email_works_path, class: 'text-muted', data: {confirm: "Are you sure?"} do
                %i.fa.fa-envelope
                send report to #{current_user.email}

          %th.col-xs-6
            Details

      %tbody#works_table
        - period = (@from_date..@to_date)
        - @data.each do |item|
          %tr.works_table_row
            %td
              = link_to item[0].name, language_general_menu_path(@language, item[0])
              - parent = item[0].general_menu
              - if parent && parent.multipart?
                of #{parent.name}
              %br/
              %b= work_in_progress_short_helper(item[1])
            %td
              - item[1].each do |general_menu_action|
                - if period.cover?(general_menu_action.end_date)
                  #{general_menu_action.end_date}: #{work_in_progress_user_name_helper(general_menu_action)} finished #{general_menu_action.task.title.downcase}
                  %br/
                - if period.cover?(general_menu_action.start_date)
                  #{general_menu_action.start_date}: #{work_in_progress_user_name_helper(general_menu_action)} started #{general_menu_action.task.title.downcase}
                  %br/

    - if @data.empty?
      Sorry, nothing found

.row
  .col-xs-12.col-sm-12.col-md-10.col-lg-10.col-md-offset-1.col-lg-offset-1
    .pagination.pagination-centered
      - params.clear
      = paginate @data, :params => {:controller => 'works', :action => 'index'}

:javascript
  #{ render :partial => 'infinitescroll.js' }
